{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../product.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class AddProductComponent {\n  constructor(productService, router) {\n    this.productService = productService;\n    this.router = router;\n    this.newProduct = {\n      id: 0,\n      name: '',\n      email: \"\",\n      address: ''\n    };\n  }\n  add() {\n    this.productService.create(this.newProduct).subscribe(createdProduct => {\n      // Refresh the list of products after adding a new product\n      this.router.navigate(['/product']);\n    }, error => {\n      console.error('Error adding product:', error);\n    });\n  }\n}\nAddProductComponent.ɵfac = function AddProductComponent_Factory(t) {\n  return new (t || AddProductComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddProductComponent,\n  selectors: [[\"app-add-product\"]],\n  decls: 21,\n  vars: 0,\n  consts: [[1, \"col-md-12\"], [1, \"row\"], [3, \"click\"], [1, \"mb-1\"], [\"type\", \"text\", \"([(ngModel)]\", \"newProduct.name\", \")\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"text-danger\"], [\"type\", \"email\", \"([(ngModel)]\", \"newProduct.email\", \")\", \"\", \"required\", \"\", 1, \"form-control\"], [\"rows\", \"3\", \"([(ngModel)]\", \"newProduct.address\", \")\", \"\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"btn\", \"btn-success\", \"btn-sm\"]],\n  template: function AddProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Add Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"form\", 2);\n      i0.ɵɵlistener(\"click\", function AddProductComponent_Template_form_click_4_listener() {\n        return ctx.add();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4)(9, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\");\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6)(14, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\");\n      i0.ɵɵtext(17, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"textarea\", 7)(19, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,mBAAc,GAAdD,cAAc;IAA0B,WAAM,GAANC,MAAM;IAFlE,eAAU,GAAY;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;EAEa;EAE9EC,GAAG;IACD,IAAI,CAACN,cAAc,CAACO,MAAM,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAClDC,cAAc,IAAI;MACjB;MACA,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACF;EACH;;AAfWd,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MACpBA,8BAAuB;MAETA;QAAA,OAASC,SAAK;MAAA,EAAC;MACjBD,8BAAkB;MACPA,oBAAI;MAAAA,iBAAQ;MACnBA,2BAAoF;MAExFA,iBAAM;MACNA,+BAAkB;MACPA,sBAAK;MAAAA,iBAAQ;MACpBA,4BAAsF;MAE1FA,iBAAM;MACNA,+BAAkB;MACPA,wBAAO;MAAAA,iBAAQ;MACtBA,+BAAuF;MAE3FA,iBAAM;MACNA,4BAAmE;MACvEA,iBAAO","names":["AddProductComponent","constructor","productService","router","id","name","email","address","add","create","newProduct","subscribe","createdProduct","navigate","error","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\FullStack\\AngularCRUD\\ClientApp\\src\\app\\add-product\\add-product.component.ts","D:\\FullStack\\AngularCRUD\\ClientApp\\src\\app\\add-product\\add-product.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Product } from '../product';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent {\n  newProduct: Product = { id: 0, name: '', email: \"\", address: '' };\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  add(): void {\n    this.productService.create(this.newProduct).subscribe(\n      (createdProduct) => {\n        // Refresh the list of products after adding a new product\n        this.router.navigate(['/product']);\n      },\n      (error) => {\n        console.error('Error adding product:', error);\n      }\n    );\n  }\n}\n","<h3>Add Product</h3>\n<div class=\"col-md-12\">\n    <div class=\"row\">\n        <form (click)=\"add()\">\n            <div class=\"mb-1\">\n                <label>Name</label>\n                <input class=\"form-control\" type=\"text\" ([(ngModel)]=\"newProduct.name\" ) required />\n                <span class=\"text-danger\"></span>\n            </div>\n            <div class=\"mb-1\">\n                <label>Email</label>\n                <input class=\"form-control\" type=\"email\" ([(ngModel)]=\"newProduct.email\" ) required />\n                <span class=\"text-danger\"></span>\n            </div>\n            <div class=\"mb-1\">\n                <label>Address</label>\n                <textarea class=\"form-control\" rows=\"3\" ([(ngModel)]=\"newProduct.address\" )></textarea>\n                <span class=\"text-danger\"></span>\n            </div>\n            <input type=\"submit\" value=\"Submit\" class=\"btn btn-success btn-sm\">\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}